{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["rand","Math","random","rand1","rand2","App","className","onSubmit","e","preventDefault","f","FormData","target","entries","pair","console","log","Array","keys","map","i","name","type","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAMA,EAAO,oBAAyB,GAAhBC,KAAKC,WACrBC,EAAQH,IACRI,EAAQJ,IAiCCK,MA/Bf,WAUE,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMC,SAVW,SAACC,GACpBA,EAAEC,iBACF,IAF0B,EAEpBC,EAAI,IAAIC,SAASH,EAAEI,QAFC,cAGTF,EAAEG,WAHO,IAG1B,2BAA8B,CAAC,IAAtBC,EAAqB,QAC5BC,QAAQC,IAAIF,EAAK,GAAK,KAAOA,EAAK,KAJV,gCAUxB,UACG,YAAIG,MAAMd,GAAOe,QAAQC,KAAI,SAACC,GAAD,OAC5B,8BAAwB,uBAAOC,KAAI,gBAAWD,GAAKE,KAAK,UAAxD,gBAAmBF,OAEpB,YAAIH,MAAMb,GAAOc,QAAQC,KAAI,SAACC,GAAD,OAC5B,8BACE,yBAAQC,KAAI,iBAAYD,GAAxB,UACE,wBAAQG,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,mBAJJ,iBAAoBH,OAQtB,kDCjBOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.058b16e4.chunk.js","sourcesContent":["const rand = () => ~~(Math.random() * 10);\nconst rand1 = rand();\nconst rand2 = rand();\n\nfunction App() {\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const f = new FormData(e.target);\n    for (var pair of f.entries()) {\n      console.log(pair[0] + ': ' + pair[1]);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        {[...Array(rand1).keys()].map((i) =>\n          <div key={`input-${i}`}><input name={`input-${i}`} type=\"text\" /></div>\n        )}\n        {[...Array(rand2).keys()].map((i) =>\n          <div key={`select-${i}`}>\n            <select name={`select-${i}`}>\n              <option value=\"a\">a</option>\n              <option value=\"b\">b</option>\n              <option value=\"c\">c</option>\n            </select>\n          </div>\n        )}\n        <button>submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}